{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://hometechhq.github.io/ai-dev-tasks/specs/Prd.schema.json",
  "title": "ProductRequirementDocument",
  "description": "Machine-readable representation of a Product Requirement Document (PRD). Provides structure for planner and implementor agents.",
  "type": "object",
  "additionalProperties": false,

  "properties": {
    "schema_version": {
      "type": "string",
      "description": "Semantic version of this schema.",
      "default": "1.0.0"
    },

    "prd_id": {
      "type": "string",
      "description": "Stable identifier for this PRD (ISO8601 timestamp, UUID, or human-friendly slug)."
    },

    "title": {
      "type": "string",
      "description": "Feature or product name (short, human-friendly)."
    },

    "summary": {
      "type": "string",
      "description": "Executive overview of the feature/product and its goals."
    },

    "background": {
      "type": "string",
      "description": "Context, motivation, or problem statement driving this PRD."
    },

    "objectives": {
      "type": "array",
      "description": "Key objectives this PRD intends to achieve.",
      "items": { "type": "string" }
    },

    "out_of_scope": {
      "type": "array",
      "description": "Explicit items that are NOT part of this scope.",
      "items": { "type": "string" }
    },

    "requirements": {
      "type": "array",
      "description": "Structured feature requirements. Each becomes one or more tasks in the plan.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Requirement identifier (e.g., R1, R2)."
          },
          "description": {
            "type": "string",
            "description": "Detailed requirement description."
          },
          "priority": {
            "type": "string",
            "enum": ["must_have", "should_have", "could_have", "won't_have"],
            "description": "Priority (MoSCoW method)."
          },
          "acceptance_criteria": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Acceptance criteria for this requirement."
          },
          "dependencies": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Other requirement IDs this depends on."
          },
          "component": {
            "type": "string",
            "description": "Logical component/module impacted."
          }
        },
        "required": ["id", "description"]
      }
    },

    "personas": {
      "type": "array",
      "description": "User personas relevant to this PRD.",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "role": { "type": "string" },
          "goals": { "type": "array", "items": { "type": "string" } },
          "pain_points": { "type": "array", "items": { "type": "string" } }
        }
      }
    },

    "assumptions": {
      "type": "array",
      "description": "Assumptions underlying this PRD.",
      "items": { "type": "string" }
    },

    "risks": {
      "type": "array",
      "description": "Known risks or open questions.",
      "items": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "impact": { "type": "string" },
          "mitigation": { "type": "string" }
        }
      }
    },

    "dependencies": {
      "type": "array",
      "description": "External dependencies (teams, systems, vendors).",
      "items": { "type": "string" }
    },

    "non_functional": {
      "type": "object",
      "description": "Non-functional requirements (security, performance, compliance).",
      "additionalProperties": false,
      "properties": {
        "security": { "type": "array", "items": { "type": "string" } },
        "performance": { "type": "array", "items": { "type": "string" } },
        "compliance": { "type": "array", "items": { "type": "string" } }
      }
    },

    "metadata": {
      "type": "object",
      "description": "Provenance and versioning info.",
      "additionalProperties": false,
      "properties": {
        "created_by": { "type": "string" },
        "created_at": { "type": "string", "format": "date-time" },
        "updated_at": { "type": "string", "format": "date-time" },
        "version": { "type": "string" }
      }
    }
  },

  "required": ["schema_version", "prd_id", "title", "requirements", "metadata"],

  "examples": [
    {
      "schema_version": "1.0.0",
      "prd_id": "PRD-2025-08-login",
      "title": "Secure Login with JWT",
      "summary": "Enable secure login API issuing JWT tokens.",
      "background": "Users need a reliable login mechanism with sessionless auth.",
      "objectives": [
        "Support login via username/password",
        "Return JWT with 1h expiration"
      ],
      "out_of_scope": ["Signup flows", "OAuth integrations"],
      "requirements": [
        {
          "id": "R1",
          "description": "Implement POST /auth/login",
          "priority": "must_have",
          "acceptance_criteria": [
            "Valid creds -> 200 + JWT",
            "Invalid creds -> 401"
          ],
          "component": "backend"
        },
        {
          "id": "R2",
          "description": "Unit tests for login API",
          "priority": "must_have",
          "acceptance_criteria": [
            "Tests cover valid and invalid credentials",
            ">= 85% coverage for auth path"
          ],
          "component": "backend"
        }
      ],
      "personas": [
        {
          "name": "Alice",
          "role": "End-user",
          "goals": ["Login quickly", "Stay signed in"],
          "pain_points": ["Slow login", "Session timeouts"]
        }
      ],
      "assumptions": ["Existing user DB with hashed passwords"],
      "risks": [
        {
          "description": "JWT secret misconfigured",
          "impact": "High",
          "mitigation": "Use env var + rotation"
        }
      ],
      "dependencies": ["User database"],
      "non_functional": {
        "security": ["JWT signing algorithm must be HS256 or RS256"],
        "performance": ["Login response < 300ms"],
        "compliance": ["Must log failed login attempts for audit"]
      },
      "metadata": {
        "created_by": "agent:prd",
        "created_at": "2025-08-29T12:00:00Z",
        "version": "1.0.0"
      }
    }
  ]
}
